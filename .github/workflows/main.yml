name: Extract code and references from GameCube games.

on:
  push:
    branches:
      - "**"  # Runs on every commit on any branch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Get_GC_CODE_DATA:
    runs-on: ubuntu-latest

    steps:
      - name: Setup env
        run: |
          export $(dbus-launch)
          echo "DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS" >> $GITHUB_ENV
          export XDG_RUNTIME_DIR=/tmp/runtime-user
          mkdir -p $XDG_RUNTIME_DIR
          chmod 700 $XDG_RUNTIME_DIR
          echo "XDG_RUNTIME_DIR=$XDG_RUNTIME_DIR" >> $GITHUB_ENV
          wget https://github.com/Moddimation/OP_GC_EXE_ALL_SCRIPT/raw/ae428a20d8b19cc1d9ee053b1670fabe23aba12b/orthrus-linux-x86_64.zip
          7z x orthrus-linux-x86_64.zip
          rm orthrus-linux-x86_64.zip -f
          chmod +x orthrus

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y p7zip-full
          sudo apt install flatpak
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install flathub org.DolphinEmu.dolphin-emu -y

      - name: Downloads & Extracts
        run: |
          alias filterDelete='find . -type f \( -iname "*.tpl" -o -iname "*.lsb" -o -iname "*.mhp" -o -iname "*.drs" \) | xargs -I "{}" mv "{}"'
          alias filterFind='find . -type f -exec grep -ELis "0x[0-9a-fA-F]{8,}|ppceabi|metrotrk|metrowerks|msl_c|section layout" "{}" \; | xargs -I "{}" rm -f "{}" 2>/dev/null || true'
          alias filterExt='find . -type f ! \( -iname "*.dmp" -o -iname "*.fld*" \) | xargs -I "{}" mv "{}"'
          alias filterTextFiles='find . -type f \( -iname "*.csv" -o -iname "*.txt" \) -exec grep -ELis "__start|msl_c|MetroTRK|jsystem" "{}" \; | xargs -I "{}" mv "{}"'
          alias dolphinTool='flatpak run --command="dolphin-tool" --filesystem host org.DolphinEmu.dolphin-emu'
          export link="https://myrient.erista.me/files/Redump/Nintendo%20-%20GameCube%20-%20NKit%20RVZ%20%5Bzstd-19-128k%5D"

          rm -f "./gamelist"
          echo "# Getting index ..."
          wget -q "$link/"
          echo "# OK, now index for filenames, download and process everything ..."
          folderNum="$(find . -mindepth 1 -maxdepth 1 -type d | wc -l)"
          echo "# Current number of games: $folderNum"
          cat index.html | grep .zip | sed 's/" title.*//' | sed 's/.*href="//' | while read -r zip_file; do
            if [[ "$zip_file" == *"Action"*"Replay"* ]]; then
              continue;
            fi
            echo ">> Fetching next game ..."
            wget -q --show-progress --progress=bar:giga "$link/$zip_file" & PID=$!
            filename=$(ls *.zip 2>/dev/null | head -n 1)
            if [ -z "$filename" ]; then
              while [ -z "$filename" ]; do
                filename=$(ls *.zip 2>/dev/null | head -n 1) 2>/dev/null
              done;
              file_name="${filename%.zip}"
            fi
            echo "$file_name" >> "./gamelist"
            if ! [ -d "$file_name" ]; then
              echo "   Name: $file_name"
              wait $!
            else
              echo "<< Found existing folder!";
              pkill wget 1>&- 2>&-;
              rm "$filename";
              echo "   Continuing, size: $(du -sh "$file_name" | awk '{print $1}') / $(du -sh . | awk '{print $1}')";
              continue;
            fi
            mkdir "$file_name"
            echo " # Extracting download ..."
            7z x "$filename" -y -bso0 -bsp0 -bse0
            rm "$filename"
            rvz_file=$(ls *.rvz | head -n 1)
            echo " # Extracting game ..."
            dolphinTool extract -i "$rvz_file" -o "$file_name/" -q 2>/dev/null || true
            rm "$rvz_file"
            echo " # Run filter ..."
            echo "  # Scan for sub archives ..."
            rm -rf tmp
            mkdir -p tmp
            cd "$file_name" && filterDelete "../tmp" 2>/dev/null || true && cd ..
            for i in 1 2 3; do
              echo "   # Scan iteration $i"
              find "$file_name" -empty -delete
              find "$file_name" -type f ! \( -ipath "*mission*" -o -ipath "*room*" \) | while read -r possible_archive_file; do
                sub_file_name="$(basename "$possible_archive_file" | sed 's/\.[^.]*$//')"
                echo "   - Trying '$possible_archive_file' ..."
                mkdir "$file_name/files/$sub_file_name.d" -p
                dolphinTool extract -i "$possible_archive_file" -o "$file_name/files/$sub_file_name.d" 2>/dev/null || true
                dec_file="tmp/CURRENT_POSSIBLE_ARCHIVE"
                extracted_dir="$file_name/files/$sub_file_name.d"
                rm -f "$dec_file" 2>/dev/null || true
                orthrus ncompress yay0 -d "$possible_archive_file" "$dec_file" > /dev/null 2>&1 || true
                orthrus ncompress yaz0 -d "$possible_archive_file" "$dec_file" > /dev/null 2>&1 || true
              orthrus panda3d bam -d "$possible_archive_file" "$dec_file" > /dev/null 2>&1 || true && \
              orthrus panda3d multifile -d "$possible_archive_file" "$dec_file" > /dev/null 2>&1 || true && \
              orthrus jsystem rarc -d "$possible_archive_file" "$dec_file" > /dev/null 2>&1 || true && \
              orthrus godot pck -d "$possible_archive_file" "$dec_file" > /dev/null 2>&1 || true && \
              cp -f "$dec_file" "$possible_archive_file" 2>/dev/null || true && \
             # dtk rarc extract "$possible_archive_file" -o "$extracted_dir" > /dev/null 2>&1 || true && \
             # dtk u8 extract "$possible_archive_file" -o "$extracted_dir" > /dev/null 2>&1 || true && \
             # dtk wad extract "$possible_archive_file" -o "$extracted_dir" > /dev/null 2>&1 || true && \
             tar -xf "$possibble_archive_file" -C "$extracted_dir" > /dev/null 2>&1 || true && \
             7z x "$possible_archive_file" -o"$extracted_dir" > /dev/null 2>&1 || true && \
             
             # find "$file_name" -name "wszst-setup.txt" -type f -delete 2>/dev/null || true && \
             
             if [ -z "$(ls -A "$extracted_dir")" ]; then
                 # echo "   ! No data found, continue";
                 rmdir "$extracted_dir";
                 mv "filename.szs" "${filename%.szs}" > /dev/null 2>&1;
                 continue;
             fi && \
             
             ls "$extracted_dir" && \
             rm "$possible_archive_file" && \
             echo "   # Extracted sub-archive: $possible_archive_file" # && \
             
           done;
          done && \
          cd "$file_name" && \
          pathMainD="$(find . -type d -name "main.d")" && \
          if ! [ -z "$pathMainD" ]; then
             if [ -z "$(cmp "$pathMainD/sys/main.dol" "./sys/main.dol")" ]; then
                 cp -rf "$pathMainD/*" ".";
                 rm -rf "$pathMainD"
             fi
          fi && \
          echo "  # Cutting files ..." && \
          filterDelete "../tmp/" 2>/dev/null && \
          filterExt "../tmp/" 2>/dev/null && \
          filterTextFiles "../tmp/" 2>/dev/null && \
          cd "../tmp/" && \
          echo " # Post-Processing ..." && \
          filterFind "../$file_name/files/" > /dev/null 2>&1 || true && \
          find "../$file_name" -empty -delete && \
          if rmdir "../$file_name" 2>/dev/null; then
             echo " ! No code data found.";
             echo "   Continuing, all size: $(du -sh . | awk '{print $1}')";
             cd ..;
             rm -rf "$file_name";
             continue;
          fi && \
          ignored=$(find . -type f | awk -F. '{if (NF>1) print $NF}' | sort -u | paste -sd "," - ) && \ 
          cd ".." && \
          rm -rf tmp && \
          echo "<< Finished '$file_name'" && \
          echo "   Ignored:" && \
          echo "$ignored" && \
          echo "   Found:" && \
            find "$file_name" -type f && \
            echo " # Continuing, size: $(du -sh "$file_name" | awk '{print $1}') / $(du -sh . | awk '{print $1}')"
          done
          find . -type d -empty -delete
          echo "# Done! Successfully got code data from every GameCube game."
      - name: Compress
        if: success()  # Only list contents if extraction succeeded
        run: |
          7z a -v4900M BundleGC.7z ./*
          sudo rm -rf ./*/

      - name: Upload file list
        uses: actions/upload-artifact@v4
        with:
          name: BundleGC
          path: BundleGC.7z.*

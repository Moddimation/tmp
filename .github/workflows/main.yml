name: Extract code and references from GameCube games.

on:
  push:
    branches:
      - "**"  # Runs on every commit on any branch 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }} 
  cancel-in-progress: true

jobs:
  Get_GC_CODE_DATA:
    runs-on: ubuntu-latest
        
    steps:
    - name: Setup env
      run: |
        export $(dbus-launch)
        echo "DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS" >> $GITHUB_ENV
        export XDG_RUNTIME_DIR=/tmp/runtime-user
        mkdir -p $XDG_RUNTIME_DIR
        chmod 700 $XDG_RUNTIME_DIR
        echo "XDG_RUNTIME_DIR=$XDG_RUNTIME_DIR" >> $GITHUB_ENV

    - name: Prepare
      run: |
        sudo apt-get update && sudo apt-get install -y p7zip-full
        sudo apt install flatpak
        sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        sudo flatpak install flathub org.DolphinEmu.dolphin-emu -y

    - name: Downloads & Extracts
      run: |
        set -e
        echo " # Starting, download index.html ..."
        mkdir -p tmp
        wget -q https://myrient.erista.me/files/Redump/Nintendo%20-%20GameCube%20-%20NKit%20RVZ%20%5Bzstd-19-128k%5D/
        export link_prefix="https://myrient.erista.me/files/Redump/Nintendo%20-%20GameCube%20-%20NKit%20RVZ%20%5Bzstd-19-128k%5D"
        echo " # OK, now index for filenames, download and process everything ..."
        cat index.html | grep .zip | sed 's/\" title.*//' | sed 's/.*href=\"//' | while read -r zip_file; do
          echo " >> Downloading '$(echo "$zip_file" | sed -E '
            s/%20/ /g;  s/%21/!/g;  s/%22/"/g;  s/%23/#/g;  s/%24/\$/g;
            s/%25/%/g;  s/%26/\&/g;  s/%27/'\''/g;  s/%28/(/g;  s/%29/)/g;
            s/%2A/*/g;  s/%2B/+/g;  s/%2C/,/g;  s/%2D/-/g;  s/%2E/./g;
            s/%2F/\//g; s/%3A/:/g;  s/%3B/;/g;  s/%3C/</g;  s/%3D/=/g;
            s/%3E/>/g;  s/%3F/?/g;  s/%40/@/g;  s/%5B/[/g;  s/%5C/\\/g;
            s/%5D/]/g;  s/%5E/^/g;  s/%5F/_/g;  s/%60/`/g;  s/%7B/{/g;
            s/%7C/|/g;  s/%7D/}/g;  s/%7E/~/g;
          ')'" && \
          wget -q "$link_prefix/$zip_file" && \
          filename=$(ls *.zip | head -n 1) && \
          file_name="${filename%.zip}" && \
          mkdir "$file_name" && \
          echo " # Extracting download ..." && \
          7z x "$filename" -y -bso0 -bsp0 -bse0 && \
          rm "$filename" && \
          rvz_file=$(ls *.rvz | head -n 1) && \
          echo " # Extracting game ..." && \
          flatpak run --command="dolphin-tool" --filesystem=host org.DolphinEmu.dolphin-emu extract -i "$rvz_file" -o "$file_name/" -q && \
          rm "$rvz_file" && \
          cd "$file_name" && \
          echo " # Run filter ..." && \
          rm -rf ../tmp && \
          mkdir -p ../tmp && \
          find . -type f -iname "*debug*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.map*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.rel*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.elf*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.txt*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.dol*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.ini*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.sym*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "main.*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.rsym*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.lua*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.rso*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.cfg*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.csv*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.gci*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.sav*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.bat" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.dlf" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.sh" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.xml*" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.s" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.a" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.c" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.h" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.cpp" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.hpp" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.o" -exec mv "{}" "../tmp/" \; && \
          find . -type f -iname "*.*log*" -exec mv "{}" "../tmp/" \; && \
          find . -type f \( -iname *.iso -or -iname *.gcm -or -iname *.tgc \) | while read -r possible_archive_file; do
              sub_file_name=$(basename "$possible_archive_file" | sed 's/\.[^.]*$//') && \
              echo " > Found sub-game: '$sub_file_name'" && \
              mkdir "../tmp/$sub_file_name" -p && \
              mkdir "$sub_file_name" -p && \
              echo "  # Extracting sub..." && \
              flatpak run --command="dolphin-tool" --filesystem=host org.DolphinEmu.dolphin-emu extract -i "$possible_archive_file" -o "$sub_file_name" -q > nul && \
              rm "$possible_archive_file" && \
              if [ -z "$(ls -A "$sub_file_name/*")" ]; then rm -rf "$sub_file_name"; rm -rf "../tmp/$sub_file_name"; continue; fi && \
              echo "  # Run filter..." && \
              find "$sub_file_name" -type f -iname "*debug*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.map*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.rel*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.elf*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.txt*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.dol*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.sym*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.rsym*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "main.*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.lua*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.rso*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.csv*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.dlf" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.gci*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.sav*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.bat" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.cfg*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.sh" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.s" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.c" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.a" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.cpp" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.h" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.hpp" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.o" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.xml*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.*log*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              find "$sub_file_name" -type f -iname "*.ini*" -exec mv "{}" "../tmp/$sub_file_name/" \; && \
              grep -lrEs 'mwcc|metrotrk|metrowerks|msl_c' . | xargs -I{} mv "{}" "../tmp/$sub_file_name/" && \
              cd "../tmp/$sub_file_name" && \
              grep -Evls '_start|.text|.bss|.data|0x|#!/bin|%|dvd|debug|release|build|dbg|.*.o|.*.a|.*.c|.*.h|.*.rel|text section layout' *.map *.txt *.csv *.ini *.xml *.cfg | xargs -I{} rm -f {} 2>/dev/null && \
              find . -type f \( -iname *.h4m -or -iname *.sni -or -iname .gsf -or -iname *.zsd -or -iname *.thp -or -iname *.mpc -or -iname *.bmd -or -iname *.fpk -or -iname *.viv -or -iname *.ngc \) -exec rm {} \; && \
              cd "../$file_name" && \
              rm -rf "$sub_file_name" && \
              if [ -z "$(ls -A "../tmp/$sub_file_name")" ]; then
                echo "  ! No code data found, continuing";
                rmdir "../tmp/$sub_file_name";
                continue;
              fi && \
              
              echo "  < Finished '$file_name/$sub_file_name'" && \
              echo "    Ignored:" && \
              find "../tmp/$sub_file_name" -type f | awk -F. '{if (NF>1) print $NF}' | sort -u | paste -sd "," - && \
              echo "    Found:" && \
              ls ../tmp/$sub_file_name -m
          done && \

          grep -lrEis '__start|mwcc|metrotrk|metrowerks|msl_c|runtime' . | xargs -I{} mv "{}" "../tmp/" && \

          echo " << Finished '$file_name'" && \
          echo "    Ignored:" && \
          find . -type f | awk -F. '{if (NF>1) print $NF}' | sort -u | paste -sd "," - && \

          if [ -z "$(ls -A ../tmp/)" ]; then 
            echo " !  No code data found, continue";
            rm -rf ../tmp/*;
            cd ..;
            rm -rf "$file_name";
            continue;
          fi && \

          rm -rf ./* && \
          cd ../tmp && \

          rm -f *lang* *locale* *CONTENT* && \
          grep -Evls '_start|.text|.bss|.data|0x|#!/bin|%|dvd|debug|release|build|dbg|.*.o|.*.a|.*.c|.*.h|.*.rel|text section layout' *.map *.txt *.csv *.ini *.xml *.cfg | xargs -I{} rm -f {} 2>/dev/null && \
          find . -type f \( -iname *.h4m -or -iname *.sni -or -iname .gsf -or -iname *.zsd -or -iname *.thp -or -iname *.mpc -or -iname *.bmd -or -iname *.fpk -or -iname *.viv -or -iname *.ngc \) -exec rm {} \; && \

          ls | xargs -I{} mv "{}" "../$file_name" && \
          rm -rf "./*" && \

          cd .. && \
          echo "    Found:" && \
          ls "$file_name" -m
          echo " # Continuing, current size:"
          du -sh .
        done
        find . -type d -empty -delete

    - name: Compress
      if: success()  # Only list contents if extraction succeeded
      run: |
        7z a -v4900M BundleGC.7z ./*
        sudo rm -rf ./*/

    - name: Upload file list
      uses: actions/upload-artifact@v4
      with:
        name: BundleGC
        path: BundleGC.7z.*

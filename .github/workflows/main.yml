name: Download, Extract, and List Contents of 7z File

on:
  workflow_dispatch:

jobs:
  download_extract_list:
    runs-on: ubuntu-latest

    steps:
    - name: Prepare
      run: |
        sudo apt-get update && sudo apt-get install -y p7zip-full
        wget -q https://github.com/pkgforge-dev/Dolphin-emu-AppImage/releases/download/2503-111/Dolphin_Emulator-2503-111-anylinux.squashfs-x86_64.AppImage
        chmod +x ./Dolphin*
        ./Dolphin* --appimage-extract
        find . -name "dolphin-tool"
        chmod +x squashfs-root/bin/dolphin-tool
        rm Dolphin*

    - name: Downloads & Extracts
      run: |
        mkdir -p tmp
        wget https://myrient.erista.me/files/Redump/Nintendo%20-%20GameCube%20-%20NKit%20RVZ%20%5Bzstd-19-128k%5D/
        export link_prefix="https://myrient.erista.me/files/Redump/Nintendo%20-%20GameCube%20-%20NKit%20RVZ%20%5Bzstd-19-128k%5D"
        
        cat index.html | grep .zip | sed 's/\" title.*//' | sed 's/.*href=\"//' | while read -r zip_file; do
          echo "$zip_file" && \
          wget -q "$link_prefix/$zip_file" && \
          filename=$(ls *.zip | head -n 1) && \
          file_name="${filename%.zip}" && \
          mkdir "$file_name" && \
          7z x "$filename" && rm "$filename" && \
          rvz_file=$(ls *.rvz | head -n 1) && \
          squashfs-root/bin/dolphin-tool extract -i "$rvz_file" -o "$file_name/" && \
          rm "$rvz_file" && \
          cd "$file_name" && \
          ls -lhaR && \
          find . -type f -iname "*dbg*" -exec bash -c 'mv "$0" "../tmp/$(basename "$0")"' {} \; && \
          find . -type f -iname "*debug*" -exec bash -c 'mv "$0" "../tmp/$(basename "$0")"' {} \; && \
          find . -type f -iname "*.map*" -exec bash -c 'mv "$0" "../tmp/$(basename "$0")"' {} \; && \
          find . -type f -iname "*.rel*" -exec bash -c 'mv "$0" "../tmp/$(basename "$0")"' {} \; && \
          find . -type f -iname "*.elf*" -exec bash -c 'mv "$0" "../tmp/$(basename "$0")"' {} \; && \
          find . -type f -iname "*.txt*" -exec bash -c 'mv "$0" "../tmp/$(basename "$0")"' {} \; && \
          find . -type f -iname "*.dol*" -exec bash -c 'mv "$0" "../tmp/$(basename "$0")"' {} \; && \
          find . -type f -iname "*.ini*" -exec bash -c 'mv "$0" "../tmp/$(basename "$0")"' {} \; && \
          find . -type f -iname "*.tgc*" | while read -r tgc_file; do
              sub_file_name="${tgc_file%.tgc}" && \
              mkdir "../tmp/$sub_file_name" && \
              mkdir "$sub_file_name" && \
              ../squashfs-root/bin/dolphin-tool extract -i "$tgc_file" -o "$sub_file_name" && \
              rm "$tgc_file" && \
              find "$sub_file_name" -type f -iname "*dbg*" -exec bash -c 'mv "$0" "../tmp/$sub_file_name/$(basename "$0")"' {} \; && \
              find "$sub_file_name" -type f -iname "*debug*" -exec bash -c 'mv "$0" "../tmp/$sub_file_name/$(basename "$0")"' {} \; && \
              find "$sub_file_name" -type f -iname "*.map*" -exec bash -c 'mv "$0" "../tmp/$sub_file_name/$(basename "$0")"' {} \; && \
              find "$sub_file_name" -type f -iname "*.rel*" -exec bash -c 'mv "$0" "../tmp/$sub_file_name/$(basename "$0")"' {} \; && \
              find "$sub_file_name" -type f -iname "*.elf*" -exec bash -c 'mv "$0" "../tmp/$sub_file_name/$(basename "$0")"' {} \; && \
              find "$sub_file_name" -type f -iname "*.txt*" -exec bash -c 'mv "$0" "../tmp/$sub_file_name/$(basename "$0")"' {} \; && \
              find "$sub_file_name" -type f -iname "*.dol*" -exec bash -c 'mv "$0" "../tmp/$sub_file_name/$(basename "$0")"' {} \; && \
              find "$sub_file_name" -type f -iname "*.ini*" -exec bash -c 'mv "$0" "../tmp/$sub_file_name/$(basename "$0")"' {} \;
          done && \
          ls ../tmp && \
          sudo rm -rf "./*" && \
          cd ".." && \
          mv tmp/* "$file_name"/ && \
          find "$file_name"
        done

    - name: Compress
      if: success()  # Only list contents if extraction succeeded
      run: |
        7z a BundleGC.7z ./*
        sudo rm -rf ./*/

    - name: Upload file list
      if: success()  # Only upload if previous steps succeeded
      uses: actions/upload-artifact@v4
      with:
        name: BundleGC
        path: BundleGC.7z 
